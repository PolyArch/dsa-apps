Input16: dest_id [4]
Input16: prev_vert_pr [4]
Input16: offset_list0
Input16: offset_list1

Input16: pass1
Input: barrier_i
Input: barrier_i2

E0 = dest_id0
E1 = dest_id1
E2 = dest_id2
E3 = dest_id3

temp = Sub16(offset_list1, offset_list0)
# repeat 1/d -- d times
# TODO: add later
# edge_wgt = Div16(1,temp,control=R{0:b2})

# same output value for the same working vertex
out_val0 = Mul16(1,prev_vert_pr0)
out_val1 = Mul16(1,prev_vert_pr1)
out_val2 = Mul16(1,prev_vert_pr2)
out_val3 = Mul16(1,prev_vert_pr3)

start_ind = offset_list0

row_size1 = Add16(temp, 0)
row_size2 = Div16(temp, 1)
# row_size3 = Add16(temp, 0)

x = out_val0 out_val1
val = x out_val2 out_val3

y = E0 E1
addr = y E2 E3

# check the sentinal
end_signal = Add16(dest_id0, prev_vert_pr0)
flag = ICmpEq16(end_signal, 3353)
done = Keep(1, flag)

pass2 = pass1
# TODO: could be done using indirect ports
barrier_o = barrier_i
barrier_o2 = barrier_i2

Output: val
Output: addr
Output16: row_size1
Output16: row_size2
# Output16: row_size3
Output16: start_ind
Output16: done

Output16: pass2
Output: barrier_o
Output: barrier_o2
