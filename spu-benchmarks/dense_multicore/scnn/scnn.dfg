Input16: nval[8]
Input16: sval
Input16: neuron
Input16: num_in
Input16: acc_ctrl

#Convolution dfg-------------------

# Formula = (tix-kix+1)(ty-ky+1) + (tiy-kiy+1)
# will it consider second input as 0 by default?
C0 = Acc16(1)
C1 = Acc16(1)
C2 = Acc16(1)
C3 = Acc16(1)
C4 = Acc16(1)
C5 = Acc16(1)
C6 = Acc16(1)
C7 = Acc16(1)

# output values
D0 = Mul16(nval0, sval)
D1 = Mul16(nval1, sval)
D2 = Mul16(nval2, sval)
D3 = Mul16(nval3, sval)
D4 = Mul16(nval4, sval)
D5 = Mul16(nval5, sval)
D6 = Mul16(nval6, sval)
D7 = Mul16(nval7, sval)

A00 = C3 C2
A10 = C7 C6
B00 = D3 D2
B10 = D7 D6

A0 = A00 C1 C0
A1 = A10 C5 C4
B0 = B00 D1 D0
B1 = B10 D5 D4

#Re-sparsification dfg--------------------------

relu = ReLU16(neuron)

flag = ICmpNE16(relu,0)

count = Acc16(1, acc_ctrl) #always add

inind = Keep16(1, flag)
inval = Keep16(1, flag)

ctrl = ICmpNE16(count, num_in)
done = Keep16(1, Not16(ctrl))

Output: A [2]
Output: B [2]
Output16: inval
Output16: inind
Output16: done
