Input32: entr [3] # 3-tuple from n/w
Input32: prev_err

thres = entr[0]
feat_id = entr[1]
cur_err = entr[2]

update = ICmp32(cur_err, prev_err)

# final_err = Min32(cur_err, prev_err)
# Convey the results to feat_id and thres

final_err = Hold32(cur_err, control=update{0:d})
final_feat_id = Hold32(feat_id, control=update{0:d})
final_thres = Hold32(thres, control=update{0:d})

Output32: final_feat_id
Output32: final_thres

# Input: cur_entr
# Input: const1
# Input: const2
# 
# ctrl1 = ICmpG(cur_entr)
# cur_thres = Acc64(const1,const2)
# 
# done = ICmpEQ(cur_thres,7)
# ctrl = Or(LShf64(ctrl1,1),done)
# 
# split_feat_id = Hold(cur_thres,ctrl)
# 
# Output: split_feat_id
